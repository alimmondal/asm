import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
// import { Worker, Viewer } from "@react-pdf-viewer/core";
// import "@react-pdf-viewer/core/lib/styles/index.css";
// Import the worker from the installed `pdfjs-dist` package
// import "pdfjs-dist/build/pdf.worker.entry";
function Suffix() {
    return (_jsxs("div", { className: "h-full w-full pb-10", children: [_jsx("div", { className: "", children: _jsx("h1", { className: "text-center font-semibold text-md py-20 text-green-400", children: "Suffix & Prefix" }) }), _jsxs("div", { className: "px-5 h-full md:w-[65%] mx-auto", children: [_jsx("h3", { className: "", children: " Suffix & Prefix" }), _jsxs("div", { className: "", children: ["Prefix & Suffix \u098F\u09B0 \u09AE\u09BE\u09A7\u09CD\u09AF\u09AE\u09C7 conversion of words (\u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09B0\u09C2\u09AA\u09BE\u09A8\u09CD\u09A4\u09B0) \u09B8\u09AE\u09CD\u09AA\u09B0\u09CD\u0995\u09C7 \u099C\u09BE\u09A8\u09BE \u09AF\u09BE\u09DF\u0964 Prefix & Suffix \u098F\u09B0 \u0986\u09B2\u099A\u09A8\u09BE \u0995\u09B0\u09A4\u09C7 \u0997\u09C7\u09B2\u09C7 \u09AF\u09C7 term \u099F\u09BE \u09B8\u09BE\u09AE\u09A8\u09C7 \u0986\u09B8\u09C7 \u09B8\u09C7\u099F\u09BE \u09B9\u09B2 - Affix.", _jsx("br", {}), _jsx("br", {}), "\u098F\u0996\u09A8 \u09AA\u09CD\u09B0\u09B6\u09CD\u09A8 \u09B9\u09B2 , what is Affix?", _jsx("br", {}), _jsx("br", {}), "Affix : Affix \u09AE\u09BE\u09A8\u09C7 \u09B9\u09B2 \u099C\u09C1\u09DC\u09C7 \u09A6\u09C7\u0993\u09DF\u09BE\u0964 \u09AF\u09A6\u09BF \u0986\u09AE\u09B0\u09BE \u09B8\u09B0\u09B2 \u09AD\u09BE\u09B7\u09BE\u09DF \u09AC\u09B2\u09BF, \u09A4\u09BE\u09B9\u09C7\u09B2 Affix \u09B9\u09B2 semi-words \u09AC\u09BE \u0985\u09B0\u09CD\u09A7 \u09B6\u09AC\u09CD\u09A6 \u09AC\u09BE \u09B6\u09AC\u09CD\u09A6\u09BE\u0982\u09B6 \u0964 \u098F\u09B0\u09BE \u0995\u0996\u09C7\u09A8\u09BE \u09B8\u09BE\u09A7\u09C0\u09A8\u09AD\u09BE\u09C7\u09AC \u0985\u09B0\u09CD\u09A5 \u09AA\u09CD\u09B0\u0995\u09BE\u09B6 \u0995\u09B0\u09C7\u09A4 \u09AA\u09BE\u09B0\u09C7 \u09A8\u09BE \u09AC\u09BE \u098F\u09A6\u09C7\u09B0 \u09A8\u09BF\u099C\u09C7\u09B0 \u0995\u09CB\u09A8 \u0985\u09B0\u09CD\u09A5 \u09A8\u09C7\u0987 \u0964 \u0995\u09BF\u09A8\u09CD\u09A4\u09C1 \u09AF\u0996\u09A8 \u098F\u099F\u09BE \u0995\u09BE\u09C7\u09A8\u09BE Root Word \u09AC\u09BE \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09B8\u09BE\u09A5\u09C7 Attach/Fix \u09AC\u09BE \u09AF\u09C1\u0995\u09CD\u09A4 \u0995\u09B0\u09BE \u09B9\u09DF, \u09A4\u0996\u09A8 \u0987\u09B9\u09BE \u0985\u09B0\u09CD\u09A5 \u09AA\u09CD\u09B0\u0995\u09BE\u09B6\u09C7 \u09B8\u09BE\u09B9\u09BE\u09AF\u09CD\u09AF \u0995\u09B0\u09C7\u0964", _jsx("br", {}), _jsx("br", {}), "Affix \u09B8\u09BE\u09A7\u09BE\u09B0\u09A3 \u09A4\u09BF\u09A8 \u09AA\u09CD\u09B0\u0995\u09BE\u09B0\u0983 ", _jsx("br", {}), "1. Prefix ", _jsx("br", {}), "2. Suffix ", _jsx("br", {}), "3. Infix", _jsx("br", {}), _jsx("br", {}), "\u09A8\u09BF\u099A\u09C7\u09B0 Diagram \u099F\u09BF \u09B2\u0995\u09CD\u09B7\u09CD\u09AF \u0995\u09B0, ", _jsx("br", {}), _jsx("img", { src: "/diagram.png", alt: "" }), _jsx("br", {}), _jsx("br", {}), "Prefix : Root Word \u09AC\u09BE \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09AA\u09C1\u09B0\u09CD\u09AC\u09C7 \u09AF\u09C7 Affix \u0997\u09C1\u09B2\u09CB \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 \u09A8\u09A4\u09C1\u09A8 \u09B6\u09AC\u09CD\u09A6 \u09A4\u09C8\u09B0\u09BF \u0995\u09B0\u09C7, \u09A4\u09BE\u09A6\u09C7\u09B0 Prefix \u09AC\u09B2\u09C7\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8: ", _jsx("br", {}), "1. Dis + honest = Dishonest ", _jsx("br", {}), "2. Un + happy = Unhappy ", _jsx("br", {}), "3. Im + possible = Impossible", _jsx("br", {}), _jsx("br", {}), "Suffix : Root Word \u09AC\u09BE \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09B6\u09C7\u09B7\u09C7 \u09AF\u09C7 Affix \u0997\u09C1\u09B2\u09CB \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 \u09A8\u09A4\u09C1\u09A8 \u09B6\u09AC\u09CD\u09A6 \u09A4\u09C8\u09B0\u09BF \u0995\u09B0\u09C7, \u09A4\u09BE\u09A6\u09C7\u09B0 Suffix \u09AC\u09B2\u09C7\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "1. Faith + Full = Faithfull ", _jsx("br", {}), "2. Read + Able = Readable ", _jsx("br", {}), "3. Use + less = Useless", _jsx("br", {}), _jsx("br", {}), "Infix : Root Word \u09AC\u09BE \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09AD\u09BF\u09A4\u09B0\u09C7 \u09AF\u09C7 Affix \u0997\u09C1\u09B2\u09CB \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 \u09A8\u09A4\u09C1\u09A8 \u09B6\u09AC\u09CD\u09A6 \u09A4\u09C8\u09B0\u09BF \u0995\u09B0\u09C7, \u09A4\u09BE\u09A6\u09C7\u09B0 Infix \u09AC\u09B2\u09C7\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8: ", _jsx("br", {}), "1. Able - Ability ", _jsx("br", {}), "2. Life - live", _jsx("br", {}), _jsx("br", {}), "Note : ", _jsx("br", {}), "\u25B6 \u098F\u09AE\u09A8 \u0985\u09A8\u09C7\u0995 \u09B6\u09AC\u09CD\u09A6 \u0986\u099B\u09C7 \u09AF\u09BE\u09B0 \u09AA\u09C1\u09B0\u09CD\u09AC\u09C7 Prefix \u098F\u09AC\u0982 \u09AA\u09B0\u09C7 Suffix \u0989\u09AD\u09DF\u0987 \u09AC\u09B8\u09A4\u09C7 \u09AA\u09BE\u09B0\u09C7 \u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8: ", _jsx("br", {}), "1. Unnecessarily = un + necessary + ly ", _jsx("br", {}), "2. Unstoppable = un + stop + able ", _jsx("br", {}), "3. Irregularly = ir + regular + ly ", _jsx("br", {}), "4. Unhelpful = un + help + ful 5. Disadvantageous = dis + advantage + ous", _jsx("br", {}), _jsx("br", {}), "\u25B6 \u09AF\u09C7 \u09B8\u0995\u09B2 Prefix \u098F\u09B0 \u09AE\u09BE\u09A7\u09CD\u09AF\u09AE\u09C7 \u0997\u09A0\u09BF\u09A4 \u09B6\u09AC\u09CD\u09A6 \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u09AC\u09BF\u09AA\u09B0\u09C0\u09A4 \u0985\u09B0\u09CD\u09A5 \u09A6\u09C7\u09DF\u0964", " ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "1. Dis + honest = Dishonest ", _jsx("br", {}), "2. Non + stop = Nonstop ", _jsx("br", {}), "3. Dis + allow = Disallow", _jsx("br", {}), _jsx("br", {}), "\u25B6 \u09AF\u09C7 \u09B8\u0995\u09B2 Suffix \u098F\u09B0 \u09AE\u09BE\u09A7\u09CD\u09AF\u09AE\u09C7 \u0997\u09A0\u09BF\u09A4 \u09B6\u09AC\u09CD\u09A6\u09C7 \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6\u09C7\u09B0 \u0985\u09B0\u09CD\u09A5 \u09AA\u09B0\u09BF\u09AC\u09B0\u09CD\u09A4\u09A8 \u09B9\u09DF \u09A8\u09BE, \u09A4\u09AC\u09C7 Parts of Speech \u098F\u09B0 \u09AA\u09B0\u09BF\u09AC\u09B0\u09CD\u09A4\u09A8 \u09B9\u09DF\u0964", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "1. Digit + al = Digital ", _jsx("br", {}), "2. Write + r = Writer", _jsx("br", {}), _jsx("br", {}), _jsx("h2", { className: "text-center", children: "Question Pattern" }), _jsx("p", { className: "text-center", children: "\u2B07\u2B07\u2B07" }), _jsx("br", {}), _jsx("br", {}), "\u201C \u09AA\u09B0\u09C0\u0995\u09CD\u09B7\u09BE\u09DF \u09E7\u09E6 \u099F\u09BF Root Word \u09AC\u09BE \u09AE\u09C2\u09B2 \u09B6\u09AC\u09CD\u09A6 \u09A6\u09C7\u0993\u09DF\u09BE \u09A5\u09BE\u0995\u09AC\u09C7\u0964 \u09B6\u09AC\u09CD\u09A6\u0997\u09C1\u09B2\u09CB \u09AC\u09BE\u0995\u09CD\u09AF\u09C7\u09B0 \u0985\u09B0\u09CD\u09A5 \u0985\u09A8\u09C1\u09AF\u09BE\u09DF\u09C0 Prefix \u0995\u09BF\u0982\u09AC\u09BE Suffix \u09AF\u09CB\u0997 \u0995\u09B0\u09C7 Noun, Verb, Adjective \u0985\u09A5\u09AC\u09BE Adverb \u098F \u09B0\u09C2\u09AA\u09BE\u09A8\u09CD\u09A4\u09B0 \u0995\u09B0\u09A4\u09C7 \u09B9\u09AC\u09C7\u0964 \u09AA\u09CD\u09B0\u09DF\u09CB\u099C\u09A8\u09C7 Prefix \u0993 Suffix ", _jsx("br", {}), "\u098F\u0995\u09A4\u09CD\u09B0\u09C7 \u09AC\u09CD\u09AF\u09AC\u09B9\u09BE\u09B0 \u0995\u09B0\u09A4\u09C7 \u09B9\u09AC\u09C7\u0964\u201D", _jsx("br", {}), _jsx("br", {}), _jsxs("h2", { className: "text-green-400 text-center", children: ["List of Most Important Prefixes", " "] }), "\u270C At a Glance :", _jsx("br", {}), _jsx("br", {}), _jsxs("table", { className: "min-w-[300px] mx-auto table-auto dark:border-slate-400 text-rose-500 font-bold", children: [_jsxs("tr", { children: [_jsx("td", { className: "text-center", children: "dis" }), _jsx("td", { className: "text-center", children: "il" }), _jsx("td", { className: "text-center", children: "im" }), _jsx("td", { className: "text-center", children: "in" }), _jsx("td", { className: "text-center", children: "ir" }), _jsx("td", { className: "text-center", children: "mis" })] }), _jsxs("tr", { children: [_jsx("td", { className: "text-center", children: "non" }), _jsx("td", { className: "text-center", children: "un" }), _jsx("td", { className: "text-center", children: "be" }), _jsx("td", { className: "text-center", children: "en" }), _jsx("td", { className: "text-center", children: "re" }), _jsx("td", { className: "text-center", children: "over" })] })] }), _jsx("br", {}), _jsx("br", {}), "\u25AA Dis - ", _jsx("br", {}), "1. Dis + allow = Disallow ", _jsx("br", {}), "2. Dis + honest = Dishonest ", _jsx("br", {}), "3. Dis + Agree = Disagree ", _jsx("br", {}), "4. Dis + Obey = Disobey ", _jsx("br", {}), "5. Dis + like = Dislike ", _jsx("br", {}), "6. Dis + appear = Disappear ", _jsx("br", {}), "7. Dis + honor = Dishonour ", _jsx("br", {}), "8. Dis + comfort = Discomfort ", _jsx("br", {}), "9. Dis + belief = Disbelief ", _jsx("br", {}), "10. Dis + order = Disorder", _jsx("br", {}), _jsx("br", {}), "\u25AA il - ", _jsx("br", {}), "1. il + literate = illiterate ", _jsx("br", {}), "2. il + legible = illegible ", _jsx("br", {}), "3. il + liberal = illiberal ", _jsx("br", {}), "4. il + legal = illegal ", _jsx("br", {}), "5. il + logical = illogical", _jsx("br", {}), _jsx("br", {}), "\u25AA im - ", _jsx("br", {}), "1. im + possible = impossible ", _jsx("br", {}), "2. im + mature = immature ", _jsx("br", {}), "3. im + mortal = immortal ", _jsx("br", {}), "4. im + pure = impure", _jsx("br", {}), _jsx("br", {}), "\u25AA in - ", _jsx("br", {}), "1. in + justice = injustice ", _jsx("br", {}), "2. in + active = inactive ", _jsx("br", {}), "3. in + capable = incapable ", _jsx("br", {}), "4. in + visible = invisible ", _jsx("br", {}), "5. in + complete = incomplete ", _jsx("br", {}), "6. in + correct = incorrect ", _jsx("br", {}), "7. in + definite = Indefinite ", _jsx("br", {}), "8. in + discipline = indiscipline ", _jsx("br", {}), "9. in + sensible = insensible ", _jsx("br", {}), "10. in + accurate = inaccurate ", _jsx("br", {}), "11. in + ability = inability ", _jsx("br", {}), "12. in + adequate = inadequate", _jsx("br", {}), _jsx("br", {}), "\u25AA ir - ", _jsx("br", {}), "1. ir + regular = Irregular ", _jsx("br", {}), "2. ir + responsible = irresponsible ", _jsx("br", {}), "3. ir + relevant = irrelevant ", _jsx("br", {}), "4. ir + religious = irreligious page:6 ", _jsx("br", {}), "5. ir + rational = irrational", _jsx("br", {}), _jsx("br", {}), "\u25AA mis - ", _jsx("br", {}), "1. mis + take = mistake ", _jsx("br", {}), "2. mis + fire = misfire ", _jsx("br", {}), "3. mis + use = misuse ", _jsx("br", {}), "4. mis + fortune = misfortune ", _jsx("br", {}), "5. mis + behave = misbehave ", _jsx("br", {}), "6. mis + understand = misunderstand ", _jsx("br", {}), "7. mis + interrupt = misinterpret ", _jsx("br", {}), "8. mis + conduct = misconduct ", _jsx("br", {}), "9. mis + guide = misguide", _jsx("br", {}), _jsx("br", {}), "\u25AA Non : ", _jsx("br", {}), "1. non + stop = Nonstop ", _jsx("br", {}), "2. non + violence = nonviolence ", _jsx("br", {}), "3. non + sense = nonsense ", _jsx("br", {}), "4. non + smoker = nonsmoker ", _jsx("br", {}), "5. non + fiction = nonfiction", _jsx("br", {}), _jsx("br", {}), "\u25AA Un - ", _jsx("br", {}), "1. un + able = unable ", _jsx("br", {}), "2. un + common = uncommon ", _jsx("br", {}), "3. un + social = unsocial page:7 ", _jsx("br", {}), "4. un + conscious = unconscious ", _jsx("br", {}), "5. un + usual = unusual ", _jsx("br", {}), "6. un + necessary = unnecessary ", _jsx("br", {}), "7. un + easy = uneasy ", _jsx("br", {}), "8. un + fit = unfit ", _jsx("br", {}), "9. un + popular = unpopular ", _jsx("br", {}), "10. un + fortunate = unfortunate", _jsx("br", {}), "11. un + pleasant = unpleasant ", _jsx("br", {}), "12. un + wise = unwise ", _jsx("br", {}), "13. un + safe = unsafe ", _jsx("br", {}), "14. un + done = undone ", _jsx("br", {}), "15. un + known = unknown", _jsx("br", {}), _jsx("br", {}), "Note : ", _jsx("br", {}), "\u201Cdis, il, im, ir, mis, non, un\u201D \u098F\u0987 Prefix \u0997\u09C1\u09B2\u09CB Root Word \u098F\u09B0 \u09B8\u09BE\u09A5\u09C7 \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 Negative \u0985\u09B0\u09CD\u09A5 \u0995\u09B0\u09C7\u0964", _jsx("br", {}), _jsx("br", {}), "\u25AA be - ", _jsx("br", {}), "1. be + fall = befall ", _jsx("br", {}), "2. be + fit = befit ", _jsx("br", {}), "3. be + known = beknown ", _jsx("br", {}), "4. be + siege = besiege ", _jsx("br", {}), "5. be + quiet = bequiet ", _jsx("br", {}), "Note : Adjective/Noun \u098F\u09B0 \u09AA\u09C2\u09C7\u09AC be prefix \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 Verb \u0997\u09A0\u09BF\u09A4 \u09B9\u09DF\u0964", _jsx("br", {}), _jsx("br", {}), "\u25AAen -", _jsx("br", {}), "1. en + courage = encourage ", _jsx("br", {}), "2. en + danger = endanger ", _jsx("br", {}), "3. en + large = enlarge ", _jsx("br", {}), "4. en + fold = enfold ", _jsx("br", {}), "5. en + able = enable ", _jsx("br", {}), "6. en + force = enforce ", _jsx("br", {}), "7. en + list = enlist ", _jsx("br", {}), "8. en + joy = enjoy ", _jsx("br", {}), "9. en + rich = enrich", _jsx("br", {}), _jsx("br", {}), "Note : Adjective/Noun \u098F\u09B0 \u09AA\u09C2\u09C7\u09AC be prefix \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 Verb \u0997\u09A0\u09BF\u09A4 \u09B9\u09DF\u0964", _jsx("br", {}), _jsx("br", {}), _jsx("h2", { className: "text-center", children: "List of Most Important Suffixes" }), _jsx("br", {}), "\u270C At a Glance :", _jsx("br", {}), _jsx("br", {}), _jsxs("table", { className: "min-w-[350px] mx-auto table-auto dark:border-slate-400 text-rose-500 font-bold", children: [_jsxs("tr", { children: [_jsx("td", { className: "text-center ", children: "full" }), _jsx("td", { className: "text-center", children: "al" }), _jsx("td", { className: "text-center", children: "dom" }), _jsx("td", { className: "text-center", children: "ship" }), _jsx("td", { className: "text-center", children: "less" }), _jsx("td", { className: "text-center", children: "ee" }), _jsx("td", { className: "text-center", children: "iv" })] }), _jsxs("tr", { children: [_jsx("td", { className: "text-center", children: "ment" }), _jsx("td", { className: "text-center", children: "y" }), _jsx("td", { className: "text-center", children: "ness" }), _jsx("td", { className: "text-center", children: "r/er" }), _jsx("td", { className: "text-center", children: "tion" }), _jsx("td", { className: "text-center", children: "ce/cy" }), _jsx("td", { className: "text-center", children: "ial" })] }), _jsxs("tr", { children: [_jsx("td", { className: "text-center", children: "ly" }), _jsx("td", { className: "text-center", children: "th" }), _jsx("td", { className: "text-center", children: "sion" }), _jsx("td", { className: "text-center", children: "able" }), _jsx("td", { className: "text-center", children: "hood" }), _jsx("td", { className: "text-center", children: "ous" })] })] }), _jsx("br", {}), _jsx("br", {}), "\u25AA ful - ", _jsx("br", {}), "1. Great + ful = Greatful ", _jsx("br", {}), "2. Beauty + ful = Beautiful page:9 ", _jsx("br", {}), "3. Help + ful = Helpful ", _jsx("br", {}), "4. Mercy + ful = Mercyful ", _jsx("br", {}), "5. Faith + ful = Faithful ", _jsx("br", {}), "6. Doubt + ful = Doubtful", _jsx("br", {}), _jsx("br", {}), "Note : Noun \u098F\u09B0 \u09B8\u09BE\u09C7\u09A5 ful\u02BC Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 Adjective \u0997\u09A0\u09BF\u09A4 \u09B9\u09DF\u0964", _jsx("br", {}), _jsx("br", {}), "\u25AA less - ", _jsx("br", {}), "1. Use + less = Useless ", _jsx("br", {}), "2. Life + less = Lifeless ", _jsx("br", {}), "3. Aim + less = Aimless ", _jsx("br", {}), "4. Care + less = Careless ", _jsx("br", {}), "5. Motive + less = Motiveless ", _jsx("br", {}), "6. Meaning + less = Meaningless ", _jsx("br", {}), "7. Shame + less = Shameless ", _jsx("br", {}), "8. Value + less = Valueless", _jsx("br", {}), _jsx("br", {}), "\u25AA ness -", _jsx("br", {}), "1. Kind + ness = Kindness ", _jsx("br", {}), "2. Happy + ness = Happiness ", _jsx("br", {}), "3. Fresh + ness = Freshness ", _jsx("br", {}), "4. Quiet + ness = Quietness ", _jsx("br", {}), "5. Idle + ness = Idleness", _jsx("br", {}), _jsx("br", {}), "\u25AA ly - ", _jsx("br", {}), "1. Slow + ly = Slowly ", _jsx("br", {}), "2. World + ly = worldly ", _jsx("br", {}), "3. Serious + ly = Seriously ", _jsx("br", {}), "4. Real + ly = Really ", _jsx("br", {}), "5. Appreciate + ly = Appropriately", _jsx("br", {}), "6. Rapid + ly = Rapidly ", _jsx("br", {}), "7. Exact + ly = Exactly ", _jsx("br", {}), _jsx("br", {}), "Note : ", _jsx("br", {}), "\u25CF Noun + ly = Adjective", _jsx("br", {}), "\u25CF Adjective + ly = Adverb", _jsx("br", {}), _jsx("br", {}), "\u25AA able - ", _jsx("br", {}), "1. Comfort + able = Comfortable ", _jsx("br", {}), "2. Reason + able = Reasonable ", _jsx("br", {}), "3. Forget + able = Forgettable ", _jsx("br", {}), "4. Move + able = Movable ", _jsx("br", {}), "5. Fashion + able = Fashionable", _jsx("br", {}), _jsx("br", {}), "Note : Noun \u0993 Verb \u098F\u09B0 \u09B8\u09BE\u09C7\u09A5 able\u02BC Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u09C7 Adjective \u0997\u09A0\u09BF\u09A4 \u09B9\u09DF\u0964", " ", _jsx("br", {}), _jsx("br", {}), "\u25AA al - ", _jsx("br", {}), "1. Approve + al = Approval ", _jsx("br", {}), "2. Digit + al = Digital page:11", _jsx("br", {}), "3. Society + al = Social ", _jsx("br", {}), "4. Education + al = Educational ", _jsx("br", {}), "5. Culture + al = Cultural ", _jsx("br", {}), "6. Nature + al = Natural ", _jsx("br", {}), "7. Propose + al = Proposal ", _jsx("br", {}), "8. Arrive + al = Arrival", _jsx("br", {}), _jsx("br", {}), "Note :", _jsx("br", {}), "\u25CF Noun + al = Adjective ", _jsx("br", {}), "\u25CF Verb + al = Noun", _jsx("br", {}), _jsx("br", {}), "\u25AA r/er - ", _jsx("br", {}), "1. Work + er = worker ", _jsx("br", {}), "2. Teach + er = Teacher ", _jsx("br", {}), "3. Follow + er = Follower ", _jsx("br", {}), "4. Happy + er = Happier ", _jsx("br", {}), "5. Healthy + er = Healthier ", _jsx("br", {}), "6. Wealthy + er = Wealthier ", _jsx("br", {}), "7. Build + er = Builder ", _jsx("br", {}), "8. Drive + er = Driver", _jsx("br", {}), "9. Produce + r = Producer ", _jsx("br", {}), "10. Write + r = Writer", _jsx("br", {}), _jsx("br", {}), "Note : Verb + r/er = Noun", _jsx("br", {}), _jsx("br", {}), "\u25AA ment - ", _jsx("br", {}), "1. Require + ment = Requirement ", _jsx("br", {}), "2. Establish + ment = Establishment ", _jsx("br", {}), "3. Arrange + ment = Arrangement ", _jsx("br", {}), "4. Appoint + ment = Appointment ", _jsx("br", {}), "5. Develop + ment = Development ", _jsx("br", {}), "6. Allot + ment = Allotment", _jsx("br", {}), "7. Employ + ment = Employment ", _jsx("br", {}), "8. Engage + ment = Engagement ", _jsx("br", {}), "9. Enforce + ment = Enforcement ", _jsx("br", {}), "10. Judge + ment = Judgement ", _jsx("br", {}), "11. Enjoy + ment = Enjoyment ", _jsx("br", {}), "12. Announce + ment = Announcement ", _jsx("br", {}), "13. Advertise + ment = Advertisement ", _jsx("br", {}), "14. Replace + ment = Replacement", _jsx("br", {}), _jsx("br", {}), "\u25AA tion - ", _jsx("br", {}), "1. Situate + tion = Situation ", _jsx("br", {}), "2. Cultivate + tion = Cultivation ", _jsx("br", {}), "3. Contribute + tion = Contribution ", _jsx("br", {}), "4. Educate + tion = Education ", _jsx("br", {}), "5. Donate + tion = Donation", _jsx("br", {}), "6. Plant + tion = Plantation ", _jsx("br", {}), "7. Utilise + tion = Utilization ", _jsx("br", {}), "8. Deforest + tion = Deforestation ", _jsx("br", {}), "9. Addict + tion = Addiction ", _jsx("br", {}), "10. Collect + tion = Collection ", _jsx("br", {}), "11. Distribue + tion = Distribution ", _jsx("br", {}), "12. Narrate + tion = Narration ", _jsx("br", {}), "13. Tolerate + tion = Toleration ", _jsx("br", {}), "14. Transport + tion = Transportation ", _jsx("br", {}), "15. Populate + tion = Population", _jsx("br", {}), _jsx("br", {}), "\u25AA sion - ", _jsx("br", {}), "1. Decide + sion = Decision ", _jsx("br", {}), "2. Conclude + sion = Conclusion ", _jsx("br", {}), "3. Impress + sion = Impression ", _jsx("br", {}), "4. Provide + sion = Provision ", _jsx("br", {}), "5. Profess + sion = Profession", _jsx("br", {}), _jsx("br", {}), "\u25AA ous - ", _jsx("br", {}), "1. Poison + ous = Poisonous ", _jsx("br", {}), "2. Virtue + ous = Virtuous ", _jsx("br", {}), "3. Merit + ous = Meritorious ", _jsx("br", {}), "4. Industry + ous = Industrious ", _jsx("br", {}), "5. Monotony + ous = Monotonous ", _jsx("br", {}), "6. Prosper + ous = Prosperous ", _jsx("br", {}), "7. Courage + ous = Courageous", _jsx("br", {}), "8. Glory + ous = Glorious ", _jsx("br", {}), "9. Danger + ous = Dangerous ", _jsx("br", {}), "10. Marvel + ous = Marvelous", _jsx("br", {}), _jsx("br", {}), "Note : ", _jsx("br", {}), "Noun + ous = Adjective", _jsx("br", {}), _jsx("br", {}), "\u25AA hood - ", _jsx("br", {}), "1. Child + hood = Childhood ", _jsx("br", {}), "2. Boy + hood = Boyhood ", _jsx("br", {}), "3. False + hood = Falsehood", _jsx("br", {}), _jsx("br", {}), "\u25AA dom - ", _jsx("br", {}), "1. King + dom = Kingdom ", _jsx("br", {}), "2. Free + dom = Freedom ", _jsx("br", {}), "3. Wise + dom = Wisdom", _jsx("br", {}), _jsx("br", {}), "Note: ", _jsx("br", {}), "Any word + hood/dom = Noun.", _jsx("br", {}), _jsx("br", {}), "\u25AA ship - ", _jsx("br", {}), "1. Member + ship = Membership ", _jsx("br", {}), "2. Fellow + ship = Fellowship ", _jsx("br", {}), "3. Partner + ship = Partnership ", _jsx("br", {}), "4. Friend + ship = Friendship", _jsx("br", {}), "5. Scholar + ship = Friendship", _jsx("br", {}), _jsx("br", {}), "\u25AA ee - ", _jsx("br", {}), "1. Exam + ee = Examine page:15 ", _jsx("br", {}), "2. Employ + ee = Employee ", _jsx("br", {}), "3. Train + ee = Trainee ", _jsx("br", {}), "4. Nominate + ee = Nominee ", _jsx("br", {}), "5. Pay + ee = Payee ", _jsx("br", {}), "6. Address + ee = Addressee", _jsx("br", {}), _jsx("br", {}), "\u25AA y - ", _jsx("br", {}), "1. Treasure + y = Treasury ", _jsx("br", {}), "2. Greed + y = Greedy ", _jsx("br", {}), "3. Sun + y = Sunny ", _jsx("br", {}), "4. Dirt + y = Dirty ", _jsx("br", {}), "5. Craft + y = Crafty ", _jsx("br", {}), "6. Health + y = Healthy ", _jsx("br", {}), "7. Wealth + y = Wealthy ", _jsx("br", {}), "8. Hand + y = Handy ", _jsx("br", {}), "9. Storm + y = Stormy", _jsx("br", {}), _jsx("br", {}), "\u25AA th - ", _jsx("br", {}), "1. Strong + th = Strength ", _jsx("br", {}), "2. Long + th = Length ", _jsx("br", {}), "3. Deep + th = Depth ", _jsx("br", {}), "4. Warm + th = Warmth ", _jsx("br", {}), "5. Wide + th = Width ", _jsx("br", {}), "6. True + th = Truth", _jsx("br", {}), _jsx("br", {}), "Note : Adjective + th = Noun", _jsx("br", {}), _jsx("br", {}), "\u25AA ce/cy - ", _jsx("br", {}), "1. Brilliant + ce = Brilliance", _jsx("br", {}), "2. Confident + ce = Confidence ", _jsx("br", {}), "3. Constant + ce = Constance ", _jsx("br", {}), "4. Excellent + ce = Excellence ", _jsx("br", {}), "5. Instant + ce = Instance ", _jsx("br", {}), "6. Urgent + cy = Urgency ", _jsx("br", {}), "7. Sufficient + cy = Sufficiency page:16 ", _jsx("br", {}), "8. Secret + cy = Secrecy ", _jsx("br", {}), "9. Efficient + cy = Efficiency", _jsx("br", {}), _jsx("br", {}), "\u25AA ial - ", _jsx("br", {}), "1. Office + ial = Official ", _jsx("br", {}), "2. Lyric + ial = Lyrical ", _jsx("br", {}), "3. Logic + ial = Logical ", _jsx("br", {}), "4. Finance + ial = Financial", _jsx("br", {}), _jsx("br", {}), "\u25AA ive - ", _jsx("br", {}), "1. Abuse + ive = Abusive ", _jsx("br", {}), "2. Defence + ive = Defensive ", _jsx("br", {}), "3. Reflex + ive = Reflexive ", _jsx("br", {}), "4. Offence + ive = Offensive ", _jsx("br", {}), "5. Object + ive = Objective ", _jsx("br", {}), "6. Impress + ive = Impressive ", _jsx("br", {}), _jsx("br", {}), "\u098F\u0987 Chart \u09AE\u09A8\u09C7 \u09B0\u09BE\u0996\u09BE\u09B0 \u099A\u09C7\u09B7\u09CD\u099F\u09BE \u0995\u09B0\u09AC\u09C7", _jsx("br", {}), _jsx("br", {}), _jsxs("table", { className: "min-w-full mx-auto table-auto dark:border-slate-400 text-rose-500 font-bold", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-black  dark:text-gray-300", children: [_jsx("td", { className: "text-center", children: "Noun" }), _jsx("th", { className: "text-center", children: "Adjective" }), _jsx("th", { className: "text-center", children: "Verb" }), _jsx("th", { className: "text-center", children: "Adverb" })] }) }), _jsx("tbody", { children: _jsxs("tr", { className: "", children: [_jsx("td", { className: "py-2 px-4", children: "tion, sion, ment, ance, ence, ness, hood, dom, ture, age, ty, th, er" }), _jsx("td", { className: "py-2 px-2", children: "al, tive, sive, ful, ous, able, ible, less, ant, ent, ed, thy" }), _jsx("td", { className: "py-2 px-2", children: "ate, ate, fy" }), _jsx("td", { className: "py-2 px-2", children: "ly" })] }) })] }), _jsx("br", {}), _jsx("br", {}), "\u201CSuffix \u098F \u09AD\u09BE\u09C7\u09B2\u09BE \u0995\u09B0\u09C7\u09A4 \u09B9\u09C7\u09B2 Suffix \u098F\u09B0 Spelling Rules \u09AD\u09BE\u09C7\u09B2\u09BE\u09AD\u09BE\u09C7\u09AC \u099C\u09BE\u09A8\u09C7\u09A4 \u09B9\u09AC\u09C7 \u201D", _jsx("br", {}), _jsx("br", {}), "R1 ", _jsx("br", {}), "\u0995\u09CB\u09A8 Word \u09AF\u0996\u09A8 Consonant \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u09DF \u098F\u09AC\u0982 Suffix \u099F\u09BF \u098F\u0995\u099F\u09BF Consonant \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C1\u09B0\u09C1 \u09B9\u09DF, \u09A4\u0996\u09A8 \u0995\u09CB\u09A8 \u0985\u0995\u09CD\u09B7\u09B0 \u09AA\u09B0\u09BF\u09AC\u09B0\u09CD\u09A4\u09A8 \u09A8\u09BE \u0995\u09C7\u09B0 Suffix \u099F\u09BF \u09AF\u09C1\u0995\u09CD\u09A4 \u09B9\u09DF\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8: ", _jsx("br", {}), "entertain + ment = Entertainment ", _jsx("br", {}), "regret + ful = Regretful", _jsx("br", {}), _jsx("br", {}), "R2 ", _jsx("br", {}), "\u098F\u0995 Consonant \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u0993\u09DF\u09BE \u09AC\u09BF\u09B6\u09B0 \u09AD\u09BE\u0997 word \u098F\u09B0 \u099C\u09A8\u09CD\u09AF Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u0995\u09B0\u09BE\u09B0 \u09B8\u09AE\u09DF \u09B6\u09C7\u09B7\u09C7\u09B0 Letter \u09A6\u09C1\u099F\u09BF \u09AC\u09BE\u09A8\u09BE\u09A4\u09C7 \u09B9\u09DF\u0964 \u098F\u099F\u09BF \u09AC\u09BF\u09B6\u09C7\u09B7 \u0995\u09B0\u09C7 \u098F\u0995 Syllable \u09AC\u09BF\u09B6\u09BF\u09B7\u09CD\u099F Word \u0997\u09C1\u09B2\u09CB\u09B0 \u099C\u09A8\u09CD\u09AF \u09AA\u09CD\u09B0\u09AF\u09CB\u099C\u09CD\u09AF\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Run + ing = running ", _jsx("br", {}), "Fun + y = funny ", _jsx("br", {}), _jsx("br", {}), "R3 ", _jsx("br", {}), "\u098F\u0995 Syllable \u09AC\u09BF\u09B6\u09BF\u09B7\u09CD\u099F Word \u09AF\u0996\u09A8 \u098F\u0995\u09BE\u09A7\u09BF\u0995 Consonant \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u09DF, \u09A4\u0996\u09A8 \u09B6\u09C7\u09B7\u09C7\u09B0 Letter \u09A6\u09C1'\u099F\u09BE \u09AC\u09BE\u09A8\u09BE\u09A4\u09C7 \u09B9\u09AC\u09C7 \u09A8\u09BE\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Start + ing = starting ", _jsx("br", {}), "Ring + ing = ringing", _jsx("br", {}), _jsx("br", {}), "R4 ", _jsx("br", {}), "\u098F\u0995\u09BE\u09BF\u09A7\u0995 Syllable \u09AC\u09BF\u09B6\u09BF\u09B7\u09CD\u099F \u098F\u09AC\u0982 \u201CL\u201D \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u0993\u09DF\u09BE Word \u0997\u09C1\u09B2\u09CB\u09B0 \u099C\u09A8\u09CD\u09AF Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u0995\u09B0\u09BE\u09B0 \u09B8\u09AE\u09DF \u0985\u09AC\u09B6\u09CD\u09AF\u0987 \u201CL\u201D \u0995\u09C7 Double \u201CLL\u201D \u0995\u09B0\u09A4\u09C7 \u09B9\u09AC\u09C7 \u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Reveal + ing = revelling ", _jsx("br", {}), "Cancel + ed = cancelled ", _jsx("br", {}), _jsx("br", {}), "R5 ", _jsx("br", {}), "\u09AF\u09C7\u09B8\u09AC word \u098F\u09B0 \u09B6\u09C7\u09B7 Syllable \u098F \u099C\u09CB\u09B0 \u09A6\u09C7\u0993\u09DF\u09BE \u09B9\u09DF \u098F\u09AC\u0982 \u09AF\u09C7\u0997\u09C1\u09B2\u09CB \u098F\u0995\u099F\u09BF Consonant \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u09DF, \u09B8\u09C7\u0997\u09C1\u09B2\u09CB\u09B0 \u099C\u09A8\u09CD\u09AF \u09B6\u09C7\u09B7\u09C7\u09B0 Letter \u099F\u09BF \u09A6\u09C1\u099F\u09CB \u09B9\u09AC\u09C7\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Refer + ing = referring ", _jsx("br", {}), "Begin + er = beginner ", _jsx("br", {}), _jsx("br", {}), "R6 ", _jsx("br", {}), "\u09AF\u09C7\u09B8\u09AC word \u098F\u09B0 \u09B6\u09C7\u09B7 Syllable \u098F \u099C\u09CB\u09B0 \u09A6\u09C7\u0993\u09DF\u09BE \u09B9\u09DF \u09A8\u09BE, \u09B8\u09C7\u0997\u09C1\u09B2\u09CB\u09B0 \u099C\u09A8\u09CD\u09AF \u09B6\u09C7\u09B7\u09C7\u09B0 Letter \u099F\u09BF \u09A6\u09C1\u099F\u09CB \u09B9\u09AC\u09C7\u09A8\u09BE\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Benefit + ed = benefited ", _jsx("br", {}), "Offer + ing = offering ", _jsx("br", {}), _jsx("br", {}), "R7 ", _jsx("br", {}), "\u0985\u09A8\u09C1\u099A\u09CD\u099A\u09BE\u09B0\u09BF\u09A4 \u201Ce\u201D \u09AF\u09C1\u0995\u09CD\u09A4 \u09B6\u09AC\u09CD\u09A6 \u098F\u0995\u099F\u09BF Consonant \u0993 \u201Cy\u201D \u09A6\u09BF\u09DF\u09C7 \u09B6\u09C7\u09B7 \u09B9\u09B2\u09C7 Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u0995\u09B0\u09BE\u09B0 \u09B8\u09AE\u09DF \u201Cy\u201D \u09AA\u09B0\u09BF\u09AC\u09B0\u09CD\u09A4\u09A8 \u09B9\u09DF\u09C7 \u201Ci\u201D \u09B9\u09AC\u09C7\u0964 \u201Cy\u201D \u09A6\u09CD\u09AC\u09BE\u09B0\u09BE \u09B6\u09C7\u09B7 \u09B9\u0993\u09DF\u09BE \u09B6\u09AC\u09CD\u09A6\u09C7 \u201Cing\u201D Suffix \u09AF\u09C1\u0995\u09CD\u09A4 \u0995\u09B0\u09BE\u09B0 \u09B8\u09AE\u09DF \u201Cy\u201D \u09AA\u09B0\u09BF\u09AC\u09B0\u09CD\u09A4\u09A8 \u09B9\u09AC\u09C7 \u09A8\u09BE\u0964 ", _jsx("br", {}), "\u09AF\u09C7\u09AE\u09A8\u0983 ", _jsx("br", {}), "Lonely + ness = loneliness ", _jsx("br", {}), "appy + ness = happiness ", _jsx("br", {}), "Copy + ing = copying", _jsx("br", {}), _jsx("br", {}), "Live Practice", _jsx("br", {}), _jsx("br", {}), "Practice 01 ", _jsx("br", {}), "Honesty is opposite to (a) __________ (honest). An honest man is not (b) __________ (harm) to anybody. He never does (c) __________ (just) to others. When he does anything (d) __________ (moral) , he feels (e) __________(comfortable). He never tells a lie. He is always (f) __________ (response) to his duty. We should follow the path of (g) __________ (honest) and leave the path of (h) __________ (honesty). In that case, you will be (i) __________ (love) by all and will be able to reach the path of (j) __________ (prosper). ", _jsx("br", {}), _jsx("br", {}), "Practice 02 ", _jsx("br", {}), "A (a) ____ (free) fighter is a (b) ____ (war) who took part in our war of Liberation in 1971. The (c) ____ (dependence) of our motherland was (d) _____ (dear) to a freedom fighter than his life. He joined the war (e) ____ (willing). He had no (f) _____ (might) weapons with him. But he page:20 had strong moral courage. He was (g) _____ (main) a guerrilla (h) _____ (fight). He attacked the enemy from an (i) _____ (know) place and then (j) ____ (appeared). ", _jsx("br", {}), _jsx("br", {}), "Practice 03 ", _jsx("br", {}), _jsx("br", {}), "Money cannot buy (a) ____ (happy). Money is (b) ______ (obvious) necessary for our life. But it is not the thing that (c) _____ (necessary) brings happiness. Happiness is (d) _____ (absolute) a psychological thing. Basically, it is the name of a (e) _____ (feel). It lies in the (f) _____ (content) of mind. A poor man with mental (g) _____ (satisfy) may become really happy in life. On the other hand, a man with a lot of (h) _____ (rich) may not be happy. Their wealth becomes the cause of (i) _____ (happy) because most of the time they suffer from (j) _____ (secure). So they lead a life full of cares and anxieties.", _jsx("br", {}), _jsx("br", {}), "Practice 04 ", _jsx("br", {}), _jsx("br", {}), "Student life is the (a) _____ (gold) season of life. This is a (b) _____ (from) period of life. This is the time for (c) _____ (prepare) of future life. Students are the future (d) _____ (lead) of the country. They should have (e) ______ (patriot). They should achieve (f) _____ (educate) and build as (g)_____ (compete) citizens. They should gain (h) ____ (know) and learn the art of (i) _____ (behave) and (j) _____ (interact) before Others.", _jsx("br", {}), _jsx("br", {}), "Practice 05", _jsx("br", {}), _jsx("br", {}), "Bangladesh is an (a) _______ (dependent) country, but she is still burdened with poverty, (b) ______ (population) ,(c) ______ (employ), corruption, food (d) ______ (deficient), natural calamities, power crisis etc, Considering all these, the present (e) ______ (govern) has aimed at making a digital Bangladesh to (f) ______ (come) most of thes problems. The actual aim of (g) ______ (digit). Bangladesh is to establish technology based government which will emphasize the over all (h) ______ (develop) of the country and the nation. The country has (i) ______ (ready) fixed its target of (j) ______ (achieve) \u2019Digital Bangladesh\u2019 by 2021.", _jsx("br", {}), _jsx("br", {}), "Answers of the Practice Questions", _jsx("br", {}), _jsx("br", {}), "Practice 01", _jsx("br", {}), _jsx("br", {}), "a) dishonesty b) harmful c) injustice d) immoral e) uncomfortable f) responsible g) honesty h) dishonesty i) loved j) prosperity", _jsx("br", {}), _jsx("br", {}), "Practice 02 ", _jsx("br", {}), _jsx("br", {}), "a) freedom b) warrior c) independence d) dearer e) willingly f) mighty g) mainly h) fighter i) unknown j) disappeared Practice 03 a) happiness b) obviously c) necessarily d) absolutely e) feeling f) contentment g) satisfaction h) riches i) unhappiness j) insecurity"] }), _jsx("div", { className: "text-center py-4 sticky bottom-0 left-0 right-0", children: _jsx("a", { href: "/suffix-prefix.pdf", download: true, className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded", children: "Download PDF" }) }), _jsx("div", { className: "text-center", children: _jsx("p", { className: "", children: "Note: \u09AA\u09BF\u09A1\u09BF\u098F\u09AB \u09AB\u09BE\u0987\u09B2 \u09A1\u09BE\u0989\u09A8\u09B2\u09A1 \u0995\u09B0\u09B2\u09C7 \u09AE\u09CB\u09AC\u09BE\u0987\u09B2\u09C7\u09B0 File manager/ My File-\u098F \u099C\u09AE\u09BE \u09B9\u09DF\u0964 \u0997\u09C7\u09B2\u09BE\u09B0\u09BF\u09A4\u09C7 \u09AA\u09BE\u0993\u09DF\u09BE \u09AF\u09BE\u09AC\u09C7 \u09A8\u09BE\u0964" }) })] })] }));
}
export default Suffix;

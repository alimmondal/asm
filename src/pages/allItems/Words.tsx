import { useRef, useState, useEffect } from "react";
import HTMLFlipBook from "react-pageflip";
// import { Link } from "react-router-dom";
import "pdfjs-dist/build/pdf.worker.entry";
// import frontCover from "../../../public/bookCover.jpg";

// import { Worker, Viewer } from "@react-pdf-viewer/core";
import "@react-pdf-viewer/core/lib/styles/index.css";

// import { Viewer, Worker } from "@react-pdf-viewer/core";

import data from "../../../data.json";

const Words = () => {
  const flipBook = useRef<any>(null);
  const [currentPage, setCurrentPage] = useState(0);
  const [jumpPage, setJumpPage] = useState<number | "">("");
  const [isPortrait, setIsPortrait] = useState(false); // üî• auto mode

  const totalPages = 24; // Update when you add more pages

  const onFlip = (e: any) => {
    setCurrentPage(e.data);
  };

  const FlipBook = HTMLFlipBook as any;

  // üî• Detect screen size & adjust orientation
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth < 768) {
        // Mobile & small tablets ‚Üí Portrait
        setIsPortrait(true);
      } else {
        // Desktop ‚Üí Landscape
        setIsPortrait(false);
      }
    };

    handleResize(); // Run once on mount
    window.addEventListener("resize", handleResize);

    return () => window.removeEventListener("resize", handleResize);
  }, []);
  return (
    <div className="">
      <div className="flex flex-col items-center py-10 px-5 md:px-10">
        <FlipBook
          width={isPortrait ? 400 : 500} // smaller width for portrait
          height={isPortrait ? 600 : 300} // taller height for portrait
          className="shadow-2xl rounded"
          style={{
            margin: "0 auto",
            backgroundImage: "url('/bookBg.jpg')",
            backgroundSize: "cover",
          }}
          showCover={true}
          size="stretch"
          minWidth={300}
          maxWidth={1200}
          minHeight={300}
          maxHeight={900}
          drawShadow={true}
          flippingTime={800}
          usePortrait={isPortrait} // üî• auto toggle
          autoSize={true}
          clickEventForward={true}
          startZIndex={0}
          maxShadowOpacity={0.5}
          mobileScrollSupport={true}
          useMouseEvents={true}
          swipeDistance={30}
          showPageCorners={true}
          disableFlipByClick={false}
          onFlip={onFlip}
          ref={flipBook}
        >
          {/* Cover Page */}
          <div
            data-density="hard"
            className="font-bold relative book"
            // style={{
            //   backgroundImage: `url(${frontCover})`,
            //   backgroundSize: "cover",
            //   backgroundPosition: "center",
            //   backgroundRepeat: "no-repeat",
            //   width: "100%",
            //   height: "100%",
            // }}
          >
            <div className="absolute top-1/4 md:top-[30%] left-[15%] md:left-1/3">
              <div className="">
                <h1 className="text-9xl text-center pb-3">üìñ</h1>
                <h2 className="text-green-500 text-3xl text-center">
                  Oxford 3000 Essential Words
                </h2>
                <p className="text-center text-white">
                  Click/touch to read the book
                </p>
              </div>
            </div>
            <img src="/bookCover3.jpg" className="w-full h-full" alt="" />
          </div>

          {/* page1 */}
          <div className="p-3 text-black md:p-10 bg-[#EFE5D6] book-shadow">
            <h2 className="text-xl font-bold mb-2">Page 1</h2>

            <div className="">
              <p className="text-xs md:text-base">
                ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï‡¶æ <br />
                ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶¨‡ßÉ‡¶π‡ßé ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶Ö‡¶≠‡¶ø‡¶ß‡¶æ‡¶® ‡¶π‡¶≤‡ßã Oxford
                English Dictionary ‡¶è‡¶ü‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá‡¶õ‡ßá-Oxford University Press Oxford
                <br />
                University Press ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ‡¶∞ ‡¶∂‡¶¨‡ßç‡¶¶‡¶≠‡¶æ‡¶£‡ßç‡¶°‡¶æ‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡ß© ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∂‡¶¨‡ßç‡¶¶
                ‡¶¨‡¶æ‡¶õ‡¶æ‡¶á ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§ ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶∑‡ßç‡¶Ø‡¶Æ‡¶§‡ßá ‡¶è‡¶á ‡¶∂‡¶¨‡ßç‡¶¶‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡ßç‡¶∞‡¶ö‡¶≤‡¶ø‡¶§ ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ‡¶∞ ‡ßØ‡ß¶
                ‡¶∂‡¶§‡¶æ‡¶Ç‡¶∂! ‡¶´‡¶≤‡ßá ‡¶ï‡ßá‡¶â ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶è‡¶á ‡ß© ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶∂‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡ßá- ‡¶™‡¶§‡ßç‡¶∞‡¶ø‡¶ï‡¶æ,
                ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ó‡¶æ‡¶ú‡¶ø‡¶®, ‡¶ú‡¶æ‡¶∞‡ßç‡¶®‡¶æ‡¶≤, ‡¶ü‡¶ø‡¶≠‡¶ø ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤, ‡¶Ü‡¶∞‡ßç‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤, ‡¶¨‡¶á‡¶™‡¶§‡ßç‡¶∞ ‡¶ì ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶®‡ßá‡¶∞
                ‡ßØ‡ß¶ ‡¶∂‡¶§‡¶æ‡¶Ç‡¶∂ ‡¶∂‡¶ø‡¶ñ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá! ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶™‡ßú‡¶æ, ‡¶¨‡ßÅ‡¶ù‡¶æ, ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶ì ‡¶¨‡¶≤‡¶æ‡ßü ‡¶´‡ßÅ‡ßü‡ßá‡¶§‡¶ø
                ‡¶Ü‡¶®‡¶§‡ßá Oxford University Press ‡¶è‡¶á ‡¶§‡¶ø‡¶® ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∂‡¶¨‡ßç‡¶¶‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§
                <br />
                ‡¶è‡¶á ‡¶¨‡¶á‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶õ‡ßá-
                <br />
                *‡¶∏‡ßá‡¶á ‡ß© ‡¶π‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∂‡¶¨‡ßç‡¶¶
                <br />
                *IPA ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∂‡¶¨‡ßç‡¶¶‡ßá‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£
                <br />
                *‡¶∏‡ßá‡¶á ‡¶∂‡¶¨‡ßç‡¶¶‡ßá‡¶∞ ‡¶â‡¶™‡¶∞‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶® original ‡¶°‡¶ø‡¶ï‡¶∂‡¶®‡¶æ‡¶∞‡¶ø‡¶§‡ßá
                <br />
                *‡¶∂‡¶¨‡ßç‡¶¶‡¶æ‡¶∞‡ßç‡¶•
                <br />
                *‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø
                <br />
                *‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø‡ßá‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶•
                <br />
                *‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ Appropriate Preposition
                <br />
                *‡¶ú‡¶ü‡¶ø‡¶≤ ‡¶∂‡¶¨‡ßç‡¶¶-‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ
                <br />
                ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶‡¶æ‡¶®‡ßç‡¶§‡ßá,
              </p>
            </div>
          </div>

          {/* page2 */}
          <div className="p-3 text-black md:p-24 bg-[#EFE5D6] book-shadow">
            <h2 className="text-xl font-bold mb-2">Page 2</h2>
            <ul className="flex flex-wrap gap-2 items-center justify-center ">
              {" "}
              {/* üëà parent flex */}
              {data.slice(0, 14).map((item: any, index: number) => (
                <a
                  // target="_blank"
                  // rel="noopener noreferrer"
                  className="border border-gray-50 p-1 text-blue-600 hover:underline"
                  href={item.link}
                >
                  <li key={index} className="">
                    {`${index + 1}. ${item.word}`}-
                  </li>
                  <li>{item.BengaliMeaning}</li>
                </a>
              ))}
            </ul>
          </div>

          {/* page3 */}
          <div className="p-3 text-black md:p-10 bg-[#EFE5D6] book-shadow">
            <h2 className="text-xl font-bold mb-2">Page 3</h2>
            <ul className="lg:hidden flex flex-wrap gap-2 items-center justify-center ">
              {/* üëà parent flex */}
              {data.slice(15, 28).map((item: any, index: number) => (
                <a
                  // target="_blank"
                  // rel="noopener noreferrer"
                  className="border border-gray-50 p-1 text-blue-600 hover:underline"
                  href={item.link}
                >
                  <li key={index} className="">
                    {`${index + 1}. ${item.word}`}-
                  </li>
                  <li>{item.BengaliMeaning}</li>
                </a>
              ))}
            </ul>
            <ul className="hidden lg:flex flex-wrap gap-2 items-center justify-center ">
              {/* üëà parent flex */}
              {data.slice(15, 28).map((item: any, index: number) => (
                <a
                  // target="_blank"
                  // rel="noopener noreferrer"
                  className="border border-gray-50 p-3 text-blue-600 hover:underline"
                  href={item.link}
                >
                  <li key={index} className="">
                    {`${index + 1}. ${item.word}`}-
                  </li>
                  <li>‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£: {item.banglaPronunciation}</li>
                  <li>Meaning: {item.BengaliMeaning}</li>
                </a>
              ))}
            </ul>
          </div>

          {/* Back Cover */}
          <div className="bg-gradient-to-r from-indigo-600 to-purple-600  text-white text-xl font-bold">
            <div className="w-full h-full text-7xl flex flex-col items-center justify-center">
              <p className="">üîö </p>
              <p className="">The End</p>
            </div>
          </div>
        </FlipBook>

        {/* Button section */}
        <div className="flex flex-col items-center">
          {/* Navigation Controls */}
          <div className="flex items-center gap-4 mt-6">
            <button
              className="px-3 py-1 bg-gray-700 text-white rounded"
              onClick={() => flipBook.current.pageFlip().turnToPrevPage()}
            >
              ‚óÄ Prev
            </button>

            <span className="text-lg font-semibold">
              Page {currentPage + 1} / {totalPages}
            </span>

            <button
              className="px-3 py-1 bg-gray-700 text-white rounded"
              onClick={() => flipBook.current.pageFlip().turnToNextPage()}
            >
              Next ‚ñ∂
            </button>
          </div>
          {/* Jump to Page */}
          <div className="mt-4 flex items-center gap-2">
            <input
              type="number"
              min="1"
              max={totalPages}
              value={jumpPage}
              onChange={(e) => {
                const value = e.target.value;
                setJumpPage(value === "" ? "" : parseInt(value, 10));
              }}
              className="border px-1 py-1 rounded w-20 text-center"
              placeholder="Go to..."
            />
            <button
              className="px-3 py-1 bg-indigo-600 text-white rounded disabled:opacity-50"
              disabled={
                jumpPage === "" || jumpPage < 1 || jumpPage > totalPages
              }
              onClick={() => {
                if (
                  typeof jumpPage === "number" &&
                  jumpPage >= 1 &&
                  jumpPage <= totalPages
                ) {
                  flipBook.current.pageFlip().flip(jumpPage - 1);
                }
              }}
            >
              Go
            </button>
          </div>
          {/* Numbered Page Buttons */}
          <div className="flex flex-wrap justify-center gap-2 mt-4">
            {Array.from({ length: totalPages }, (_, i) => (
              <button
                key={i}
                className={`px-3 py-1 rounded border ${
                  currentPage === i
                    ? "bg-indigo-600 text-white"
                    : "bg-gray-200 hover:bg-gray-300"
                }`}
                onClick={() => flipBook.current.pageFlip().flip(i)}
              >
                {i + 1}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* scrolling effect */}
      <div className="py-10">
        <div className="container mx-auto p-2">
          <div className="overflow-x-auto">
            <table className="md:w-full min-w-[300px] table-auto  border border-gray-300">
              <thead>
                <tr className="bg-gray-100">
                  <th className="py-1 px-1 border-b">Words</th>
                  <th className="py-1 px-1 border-b">Phonemic transcription</th>
                  <th className="py-1 px-1 border-b">banglaPronunciation</th>
                  <th className="py-1 px-1 border-b">Meaning</th>
                  <th className="py-1 px-1 border-b">Examples</th>
                </tr>
              </thead>
              <tbody>
                {data.map((item: any, index: any) => (
                  <tr key={index} className="hover:bg-gray-50">
                    <td className="py-1 px-1 border-b hover:bg-blue-500">
                      <a
                        target="_blank"
                        rel="noopener noreferrer"
                        href={item.link}
                        className=""
                      >
                        {index + 1}. <br /> ${item.word}
                      </a>
                    </td>
                    <td className="py-1 px-1 border-b">{item.phonetic}</td>
                    <td className="py-1 px-1 border-b">
                      {item.banglaPronunciation}
                    </td>
                    <td className="py-1 px-1 border-b">
                      {item.BengaliMeaning}
                    </td>
                    <td className="py-1 px-1 border-b">{item.examples}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
      {/* <div className="py-10 w-[60%] mx-auto h-screen">
        <div>
          <Worker
            workerUrl={`https://unpkg.com/pdfjs-dist@2.9.359/build/pdf.worker.min.js`}
          >
            <Viewer fileUrl="/Oxford-Fluency-Essentials.pdf" />
          </Worker>
        </div>
      </div> */}
    </div>
  );
};

export default Words;

//  <table className="md:w-full min-w-[800px] table-auto   border border-gray-400 w-full text-sm">
//               <thead className="">
//                 <tr>
//                   <th className="border border-gray-400 px-1 py-1">Words</th>
//                   <th className="border border-gray-400 px-1 py-1">PHONEMIC</th>
//                   <th className="border border-gray-400 px-1 py-1">‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£</th>
//                   <th className="border border-gray-400 px-1 py-1">MEANING</th>
//                   <th className="border border-gray-400 px-1 py-1">EXAMPLES</th>
//                 </tr>
//               </thead>
//               <tbody>
//                 {/* Row 1 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">1. A</td>
//                   <td className="border border-gray-400 px-1 py-1">/a/</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶Ü</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶è‡¶ï‡¶ü‡¶ø</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     A cat is sitting on the mat.
//                   </td>
//                 </tr>

//                 {/* Row 2 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">
//                     2. Abandon
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     /…ôÀàb√¶nd…ôn/
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     ‡¶Ü‡¶¨‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶®
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     ‡¶™‡¶∞‡¶ø‡¶§‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶∞‡¶æ
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     They abandon their old habits easily.{" "}
//                   </td>
//                 </tr>

//                 {/* Row 3 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">
//                     3. Ability
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     /…ôÀàb…™l…ôti/
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶¨‡¶ø‡¶≤‡¶ø‡¶ü‡¶ø
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     He has the ability to solve complex problems.
//                   </td>
//                 </tr>

//                 {/* Row 4 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">4. Able</td>
//                   <td className="border border-gray-400 px-1 py-1">/Ààe…™bl/</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶è‡¶¨‡¶≤</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶∏‡¶ï‡ßç‡¶∑‡¶Æ</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     She is able to complete the task on time.
//                   </td>
//                 </tr>

//                 {/* Row 5 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">5. About</td>
//                   <td className="border border-gray-400 px-1 py-1">/…ôÀàba ät/</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶Ü‡¶¨‡¶æ‡¶â‡¶ü</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     I‚Äôm thinking about the problem.
//                   </td>
//                 </tr>

//                 {/* Row 6 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">6. Above</td>
//                   <td className="border border-gray-400 px-1 py-1">/…ôÀàb åv/</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶Ü‡¶¨‡¶æ‡¶≠</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶â‡¶™‡¶∞‡ßá</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     The airplane flies above the clouds.
//                   </td>
//                 </tr>

//                 {/* Row 7 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">
//                     7. Abroad
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     /…ôÀàbr…îÀêd/
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶Ü‡¶¨‡ßç‡¶∞‡¶°</td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶¨‡¶ø‡¶¶‡ßá‡¶∂‡ßá</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     She often travels abroad for work.
//                   </td>
//                 </tr>

//                 {/* Row 8 */}
//                 <tr>
//                   <td className="border border-gray-400 px-1 py-1">
//                     8. Absolute Adj. B2
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     /Àà√¶bs…ôluÀêt/
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶¨‡¶∏‡ßã‡¶≤‡ßÅ‡¶ü
//                   </td>
//                   <td className="border border-gray-400 px-1 py-1">‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£</td>
//                   <td className="border border-gray-400 px-1 py-1">
//                     The results are absolute and cannot be disputed.
//                   </td>
//                 </tr>
//               </tbody>
//             </table>
